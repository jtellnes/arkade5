<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgreementNumber" xml:space="preserve">
    <value>Agreement Number*</value>
  </data>
  <data name="ArchiveCreator" xml:space="preserve">
    <value>Archive Creator*</value>
  </data>
  <data name="ArchiveCreator_Address" xml:space="preserve">
    <value>Address (Contact, Archive Creator)</value>
  </data>
  <data name="ArchiveCreator_ContactPerson" xml:space="preserve">
    <value>Contact Person (Archive Creator)</value>
  </data>
  <data name="ArchiveCreator_Email" xml:space="preserve">
    <value>E-mail (Contact, Archive Creator)</value>
  </data>
  <data name="ArchiveCreator_Telephone" xml:space="preserve">
    <value>Telephone (Contact, Archive Creator)</value>
  </data>
  <data name="ArchiveDescription" xml:space="preserve">
    <value>Archive Description</value>
  </data>
  <data name="ArchiveExtractionSystem" xml:space="preserve">
    <value>Archive Extraction System</value>
  </data>
  <data name="ArchiveExtractionType" xml:space="preserve">
    <value>Type (Extraction)</value>
  </data>
  <data name="ArchiveExtractionTypeVersion" xml:space="preserve">
    <value>Type Version (Extraction)</value>
  </data>
  <data name="ArchiveExtractionVersion" xml:space="preserve">
    <value>Version (Extraction)</value>
  </data>
  <data name="ArchiveSystem" xml:space="preserve">
    <value>Extraction System</value>
  </data>
  <data name="CreateDocumentFileInfoText" xml:space="preserve">
    <value>Include format information for document files</value>
  </data>
  <data name="CreateDocumentFileInfoToolTip" xml:space="preserve">
    <value>NB! Large amounts of document files will heavily increase run time.</value>
  </data>
  <data name="Creator" xml:space="preserve">
    <value>Creator of information package</value>
  </data>
  <data name="Creator_Address" xml:space="preserve">
    <value>Address (Contact, Package Creator)</value>
  </data>
  <data name="Creator_ContactPerson" xml:space="preserve">
    <value>Contact Person (Package Creator)</value>
  </data>
  <data name="Creator_Email" xml:space="preserve">
    <value>E-mail (Contact, Package Creator)</value>
  </data>
  <data name="Creator_OriginalSystem" xml:space="preserve">
    <value>Original System:</value>
  </data>
  <data name="Creator_System" xml:space="preserve">
    <value>System:</value>
  </data>
  <data name="Creator_Telephone" xml:space="preserve">
    <value>Telephone (Contact, Archive Creator)</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="ExtractionDate" xml:space="preserve">
    <value>Extraction Date</value>
  </data>
  <data name="GuiSubsection_ArchiveCreator" xml:space="preserve">
    <value>Archive Creator</value>
  </data>
  <data name="GuiSubsection_ArchiveMain" xml:space="preserve">
    <value>Description of archive</value>
  </data>
  <data name="GuiSubsection_ArchiveSystem" xml:space="preserve">
    <value>Extraction System</value>
  </data>
  <data name="GuiSubsection_Creator" xml:space="preserve">
    <value>Creator of information package</value>
  </data>
  <data name="GuiSubsection_ExtractionDate" xml:space="preserve">
    <value>Extraction Date</value>
  </data>
  <data name="GuiSubsection_NoarkParameters" xml:space="preserve">
    <value>Noark fields</value>
  </data>
  <data name="GuiSubsection_Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="GuiSubsection_Producer" xml:space="preserve">
    <value>Producer</value>
  </data>
  <data name="GuiSubsection_Recipient" xml:space="preserve">
    <value>Recipient</value>
  </data>
  <data name="GuiSubsection_System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="GuiSubsection_Transferer" xml:space="preserve">
    <value>Transferer</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Label_HintTextStandardLabel" xml:space="preserve">
    <value>Current system name, start year and end year</value>
  </data>
  <data name="Label_HintTextUserdefinedLabel" xml:space="preserve">
    <value>Loaded or given value</value>
  </data>
  <data name="Label_OptionTextStandardLabel" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="Label_OptionTextUserdefinedLabel" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="LoadExternalMetadataButtonText" xml:space="preserve">
    <value>Fetch external metadata</value>
  </data>
  <data name="LoadExternalMetadataInfoText" xml:space="preserve">
    <value>Fill out the form with metadata from an external METS-file. I.e. info.xml from a previously created package.</value>
  </data>
  <data name="MetadataGuiLocale" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="MetadataLoadError" xml:space="preserve">
    <value>Was not able to fetch metadata from {0}</value>
  </data>
  <data name="MetadataRequiredFieldsInfo" xml:space="preserve">
    <value>* = Required field for creating a valid archive package</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner*</value>
  </data>
  <data name="Owner_Address" xml:space="preserve">
    <value>Address (Contact, Owner)</value>
  </data>
  <data name="Owner_ContactPerson" xml:space="preserve">
    <value>Contact Person (Owner)</value>
  </data>
  <data name="Owner_Email" xml:space="preserve">
    <value>E-mail (Contact, Owner)</value>
  </data>
  <data name="Owner_Telephone" xml:space="preserve">
    <value>Telephone (Contact, Owner)</value>
  </data>
  <data name="PackageCreationErrorStatusMessage" xml:space="preserve">
    <value>Could not create/overwite package. Please make sure the package location is not busy.</value>
  </data>
  <data name="PackageCreationOngoing" xml:space="preserve">
    <value>Creating package...</value>
  </data>
  <data name="Producer" xml:space="preserve">
    <value>Producer*</value>
  </data>
  <data name="Producer_Address" xml:space="preserve">
    <value>Address (Contact, Producer)</value>
  </data>
  <data name="Producer_ContactPerson" xml:space="preserve">
    <value>Contact Person (Producer)</value>
  </data>
  <data name="Producer_Email" xml:space="preserve">
    <value>E-mail  (Contact, Producer)</value>
  </data>
  <data name="Producer_Telephone" xml:space="preserve">
    <value>Telephone  (Contact, Producer)</value>
  </data>
  <data name="Recipient" xml:space="preserve">
    <value>Recipient*</value>
  </data>
  <data name="SelectMetadataFile" xml:space="preserve">
    <value>Choose METS-file to load metadata</value>
  </data>
  <data name="SelectOutputDirectoryMessage" xml:space="preserve">
    <value>Choose location for package</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="SystemName" xml:space="preserve">
    <value>System Name*</value>
  </data>
  <data name="SystemType" xml:space="preserve">
    <value>Type (System)*</value>
  </data>
  <data name="SystemTypeVersion" xml:space="preserve">
    <value>Type Version (System)</value>
  </data>
  <data name="SystemVersion" xml:space="preserve">
    <value>Version (System)*</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="Transferer" xml:space="preserve">
    <value>Transferer*</value>
  </data>
  <data name="Transferer_Address" xml:space="preserve">
    <value>Address (Contact, Transferer)</value>
  </data>
  <data name="Transferer_ContractPerson" xml:space="preserve">
    <value>Contact Person (Transferer)*</value>
  </data>
  <data name="Transferer_Email" xml:space="preserve">
    <value>E-mail (Contact, Transferer)</value>
  </data>
  <data name="Transferer_Telephone" xml:space="preserve">
    <value>Telephone (Contact, Transferer)</value>
  </data>
  <data name="UnsufficientDiskSpaceStatusMessage" xml:space="preserve">
    <value>Not enough disk space on target location.</value>
  </data>
  <data name="PackageCreationErrorLogMessage" xml:space="preserve">
    <value>Error: Could not create/overwrite package.</value>
  </data>
  <data name="UnsufficientDiskSpaceLogMessage" xml:space="preserve">
    <value>Not enough diskspace on target location.</value>
  </data>
  <data name="CreateLobFormatInfoFileText" xml:space="preserve">
    <value>Include format information for LOBs</value>
  </data>
</root>